{"version":3,"file":"static/js/261.b3ad63aa.chunk.js","mappings":"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","sources":["api/users.js","webpack://update-skills/./src/components/TweetCard/TweetCard.module.scss?487b","components/TweetCard/TweetCard.jsx","webpack://update-skills/./src/components/TweetList/TweetList.module.scss?6e6b","components/TweetList/TweetList.jsx","webpack://update-skills/./src/pages/TweetsPage/TweetsPage.module.scss?c243","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4000/api/';\n\nexport const axiosGetUsers = async () => {\n  const { data } = await axios.get('/users');\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TweetCard_card__XCvhd\",\"img\":\"TweetCard_img__s3grz\",\"btn\":\"TweetCard_btn__RyUJa\",\"active\":\"TweetCard_active__vx05L\",\"imgWrapper\":\"TweetCard_imgWrapper__8KwP1\",\"ava\":\"TweetCard_ava__FgFw+\",\"info\":\"TweetCard_info__CGXmp\",\"folowers\":\"TweetCard_folowers__c0p7X\"};","import { useRef } from 'react';\nimport useLocalStorage from 'use-local-storage';\n\nimport Card from '../../images/card.png';\nimport Card2x from '../../images/card@2x.png';\n\nimport s from './TweetCard.module.scss';\n\nconst toggleClassName = (conditions) => {\n  return conditions ? `${s.btn} ${s.active}` : s.btn;\n};\n\nconst TweetCard = ({ user, avatar, followers, tweets }) => {\n  const [btnCheck, setBtnCheck] = useLocalStorage(false);\n  const buttonRef = useRef(null);\n\n  const handleFormatingFollowers = (number) => {\n    if (btnCheck) {\n      return (number + 1).toLocaleString();\n    }\n\n    return number.toLocaleString();\n  };\n\n  const handleBtnClick = () => {\n    setBtnCheck(!btnCheck);\n    buttonRef.current.blur();\n  };\n\n  return (\n    <li className={s.card}>\n      <picture>\n        <source srcSet={Card2x} media=\"(min-resolution: 2dppx)\" />\n        <img className={s.img} src={Card} alt=\"card chat\" />\n      </picture>\n      <div className={s.info}>\n        <div className={s.imgWrapper}>\n          <img height=\"62\" width=\"62\" className={s.ava} src={avatar} alt={user} />\n        </div>\n        <p className={s.tweets}>\n          <span className={s.number}>{tweets.toLocaleString()}</span> TWEETS\n        </p>\n        <p className={s.folowers}>\n          <span className={s.number}>{handleFormatingFollowers(followers)}</span> FOLLOWERS\n        </p>\n        <button\n          onClick={handleBtnClick}\n          ref={buttonRef}\n          className={toggleClassName(btnCheck)}\n          type=\"button\"\n        >\n          {btnCheck ? 'Following' : 'Follow'}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TweetCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TweetList_list__7RDyA\",\"btn\":\"TweetList_btn__7Y3b1\"};","import { useEffect, useState } from 'react';\n\nimport { axiosGetUsers } from 'api/users';\nimport TweetCard from 'components/TweetCard/TweetCard';\n\nimport s from './TweetList.module.scss';\n\nconst TweetList = () => {\n  const [users, setUsers] = useState([]);\n  const [displayedUsers, setDisplayedUsers] = useState(12);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const result = await axiosGetUsers();\n      setUsers(result);\n    };\n\n    fetchUsers();\n  }, []);\n\n  const loadMoreUsers = () => {\n    setDisplayedUsers((prevCount) => prevCount + 12);\n  };\n\n  return (\n    <>\n      <ul className={s.list}>\n        {users.slice(0, displayedUsers).map((user) => (\n          <TweetCard\n            key={user.id}\n            name={user.user}\n            avatar={user.avatar}\n            followers={user.followers}\n            tweets={user.tweets}\n          />\n        ))}\n      </ul>\n      {(users.length > displayedUsers || users.length !== displayedUsers) && (\n        <button type=\"button\" className={s.btn} onClick={loadMoreUsers}>\n          load more\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default TweetList;\n","// extracted by mini-css-extract-plugin\nexport default {\"colorContainer\":\"TweetsPage_colorContainer__4IJcF\",\"container\":\"TweetsPage_container__Tqs0H\"};","import TweetList from 'components/TweetList/TweetList';\nimport s from './TweetsPage.module.scss';\n\nconst TweetsPage = () => {\n  return (\n    <div className={s.colorContainer}>\n      <div className={s.container}>\n        <TweetList />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["axios","defaults","baseURL","axiosGetUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","stop","apply","arguments","conditions","number","user","avatar","followers","tweets","_useLocalStorage","useLocalStorage","_useLocalStorage2","_slicedToArray","btnCheck","setBtnCheck","buttonRef","useRef","_jsxs","className","s","card","children","_jsx","srcSet","Card2x","media","img","src","Card","alt","info","imgWrapper","height","width","ava","toLocaleString","folowers","onClick","current","blur","ref","concat","btn","active","type","_useState","useState","_useState2","users","setUsers","_useState3","_useState4","displayedUsers","setDisplayedUsers","useEffect","fetchUsers","result","_Fragment","slice","map","TweetCard","name","id","length","prevCount","TweetList"],"sourceRoot":""}