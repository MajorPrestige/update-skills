{"version":3,"file":"static/js/261.afbebe70.chunk.js","mappings":"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","sources":["api/users.js","webpack://update-skills/./src/components/TweetCard/TweetCard.module.scss?487b","components/TweetCard/TweetCard.jsx","webpack://update-skills/./src/components/TweetList/TweetList.module.scss?6e6b","components/TweetList/TweetList.jsx","webpack://update-skills/./src/pages/TweetsPage/TweetsPage.module.scss?c243","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:4000/api/';\naxios.defaults.baseURL = 'https://json-server-qp0p.onrender.com/api/';\n\nexport const axiosGetUsers = async () => {\n  const { data } = await axios.get('/users');\n  return data;\n};\n\nexport const axiosUpdateFollowers = async (userData) => {\n  const { data } = await axios.put(`/users/${userData.id}`, userData);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TweetCard_card__XCvhd\",\"img\":\"TweetCard_img__s3grz\",\"btn\":\"TweetCard_btn__RyUJa\",\"active\":\"TweetCard_active__vx05L\",\"imgWrapper\":\"TweetCard_imgWrapper__8KwP1\",\"ava\":\"TweetCard_ava__FgFw+\",\"info\":\"TweetCard_info__CGXmp\",\"folowers\":\"TweetCard_folowers__c0p7X\"};","import { useRef } from 'react';\nimport useLocalStorage from 'use-local-storage';\n\nimport { axiosUpdateFollowers } from 'api/users';\nimport Card from '../../images/card.png';\nimport Card2x from '../../images/card@2x.png';\n\nimport s from './TweetCard.module.scss';\n\nconst toggleClassName = (conditions) => {\n  return conditions ? `${s.btn} ${s.active}` : s.btn;\n};\n\nconst TweetCard = ({\n  name,\n  avatar,\n  followers,\n  tweets,\n  currentUser,\n  updateUsers,\n}) => {\n  const [following, setFollowing] = useLocalStorage(\n    `following_${currentUser.id}`,\n    false\n  );\n  const buttonRef = useRef(null);\n\n  const handleFormatingFollowers = (number) => {\n    return number.toLocaleString();\n  };\n\n  const handleBtnClick = () => {\n    if (!following) {\n      axiosUpdateFollowers({ ...currentUser, followers: currentUser.followers + 1 })\n        .then(() => updateUsers())\n        .catch((err) => console.log(err));\n    }\n\n    if (following) {\n      axiosUpdateFollowers({ ...currentUser, followers: currentUser.followers - 1 })\n        .then(() => updateUsers())\n        .catch((err) => console.log(err));\n    }\n\n    setFollowing(!following);\n    buttonRef.current.blur();\n  };\n\n  return (\n    <li className={s.card}>\n      <picture>\n        <source srcSet={Card2x} media=\"(min-resolution: 2dppx)\" />\n        <img className={s.img} src={Card} alt=\"card chat\" />\n      </picture>\n      <div className={s.info}>\n        <div className={s.imgWrapper}>\n          <img height=\"62\" width=\"62\" className={s.ava} src={avatar} alt={name} />\n        </div>\n        <p className={s.tweets}>\n          <span className={s.number}>{tweets.toLocaleString()}</span> TWEETS\n        </p>\n        <p className={s.folowers}>\n          <span className={s.number}>{handleFormatingFollowers(followers)}</span>{' '}\n          FOLLOWERS\n        </p>\n        <button\n          onClick={handleBtnClick}\n          ref={buttonRef}\n          className={toggleClassName(following)}\n          type=\"button\"\n        >\n          {following ? 'Following' : 'Follow'}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TweetCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TweetList_list__7RDyA\",\"btn\":\"TweetList_btn__7Y3b1\"};","import { useEffect, useState } from 'react';\n\nimport { axiosGetUsers } from 'api/users';\nimport TweetCard from 'components/TweetCard/TweetCard';\n\nimport s from './TweetList.module.scss';\n\nconst TweetList = () => {\n  const [users, setUsers] = useState([]);\n  const [displayedUsers, setDisplayedUsers] = useState(12);\n\n  useEffect(() => {\n    axiosGetUsers().then((data) => setUsers(data));\n  }, []);\n\n  const updateUsers = async () => {\n    const result = await axiosGetUsers();\n    setUsers(result);\n  };\n\n  const loadMoreUsers = () => {\n    setDisplayedUsers((prevCount) => prevCount + 12);\n  };\n\n  return (\n    <>\n      <ul className={s.list}>\n        {users.slice(0, displayedUsers).map((user) => (\n          <TweetCard\n            key={user.id}\n            name={user.user}\n            avatar={user.avatar}\n            followers={user.followers}\n            tweets={user.tweets}\n            currentUser={users[user.id - 1]}\n            updateUsers={updateUsers}\n          />\n        ))}\n      </ul>\n      {(users.length > displayedUsers || users.length !== displayedUsers) && (\n        <button type=\"button\" className={s.btn} onClick={loadMoreUsers}>\n          load more\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default TweetList;\n","// extracted by mini-css-extract-plugin\nexport default {\"colorContainer\":\"TweetsPage_colorContainer__4IJcF\",\"container\":\"TweetsPage_container__Tqs0H\"};","import TweetList from 'components/TweetList/TweetList';\nimport s from './TweetsPage.module.scss';\n\nconst TweetsPage = () => {\n  return (\n    <div className={s.colorContainer}>\n      <div className={s.container}>\n        <TweetList />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["axios","defaults","baseURL","axiosGetUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","stop","apply","arguments","axiosUpdateFollowers","_ref2","_callee2","userData","_yield$axios$put","_context2","put","concat","id","_x","conditions","number","name","avatar","followers","tweets","currentUser","updateUsers","_useLocalStorage","useLocalStorage","_useLocalStorage2","_slicedToArray","following","setFollowing","buttonRef","useRef","_jsxs","className","s","card","children","_jsx","srcSet","Card2x","media","img","src","Card","alt","info","imgWrapper","height","width","ava","toLocaleString","folowers","onClick","_objectSpread","then","catch","err","console","log","current","blur","ref","btn","active","type","_useState","useState","_useState2","users","setUsers","_useState3","_useState4","displayedUsers","setDisplayedUsers","useEffect","result","_Fragment","slice","map","user","TweetCard","length","prevCount","TweetList"],"sourceRoot":""}